DROP TABLE IF EXISTS users, films, genres, film_genre, mpa_ratings, film_likes, friends;

CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) NOT NULL,
    login varchar(50),
    email varchar(50) NOT NULL UNIQUE,
    birthday date
);

CREATE TABLE IF NOT EXISTS mpa_ratings (
    mpa_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    mpa_name varchar(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genres (
    genre_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    genre_name varchar(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
    id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name varchar(50) NOT NULL,
    description varchar(200),
    duration integer,
    release_date date,
    mpa_id integer REFERENCES mpa_ratings(mpa_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS film_likes (
    film_id integer NOT NULL REFERENCES films(id) ON DELETE CASCADE,
    user_id integer NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    PRIMARY KEY(film_id, user_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id integer NOT NULL REFERENCES films(id) ON DELETE CASCADE,
    genre_id integer NOT NULL REFERENCES genres(genre_id) ON DELETE CASCADE,
    PRIMARY KEY(film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS friends (
    user_id integer NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    friend_id integer NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    PRIMARY KEY(user_id, friend_id)
);